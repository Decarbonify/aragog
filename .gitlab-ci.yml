variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  CONTAINER_CUSTOM_REGISTRY: registry.gitlab.com/qonfucius/infrastructure/docker-images
  RUSTFLAGS: -Ctarget-feature=-crt-static

stages:
  - build
  - test
  - documentation

cache: &cache_template
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - target
    - .cargo
  policy: pull-push

.cache_pulll_template: &cache_pull_template
  cache:
    <<: *cache_template
    policy: pull

build:
  image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
  stage: build
  script:
    - cargo build
  cache:
    <<: *cache_template

.test_template: &test_template
  <<: *cache_pull_template
  variables:
    ARANGO_ROOT_PASSWORD: "test"
    DB_HOST: "http://arangodb:8529"
    DB_NAME: "_system"
    DB_USER: "root"
    DB_PASSWORD: "test"
    SCHEMA_PATH: "tests/schema.yaml"
  services:
    - "arangodb:latest"
  stage: test

test:default:
  image: rust:latest
  <<: *test_template
  script:
    - cargo test --tests -- --test-threads=1

test:doc:
  image: rust:latest
  <<: *test_template
  script:
    - cargo test --doc -- --test-threads=1

test:actix:
  image: rust:latest
  <<: *test_template
  script:
    - cargo test --features "actix" --tests -- --test-threads=1

test:password_hashing:
  image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
  <<: *test_template
  script:
    - cargo test --features "password_hashing" --tests -- --test-threads=1

# test:blocking:
#   image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
#   <<: *test_template
#   script:
#     - cargo test --features "blocking derive" --no-default-features --tests --

test:packages:
  image: rust:latest
  <<: *test_template
  script:
    - cargo test --package aragog_cli --no-default-features

test:examples:
  image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
  <<: *test_template
  script:
    - cargo run --example simple_example
    - cargo run --example graph_example

test::rustfmt:
  <<: *cache_pull_template
  image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
  stage: test
  script:
    - rustup component add rustfmt --toolchain 1.47.0-x86_64-unknown-linux-musl
    - cargo fmt --all -- --check

rustdoc:
  <<: *cache_pull_template
  image: $CONTAINER_CUSTOM_REGISTRY/rust-clang-alpine:latest
  stage: documentation
  variables:
    PKG_NAME: aragog
    PKG_NAME_DIR: aragog
  script:
    - cargo --version
    - cargo rustdoc -p $PKG_NAME --features "actix password_hashing"
    - rm -rf public
    - mv target/doc public
    - echo "<meta http-equiv=\"refresh\" content=\"0; url=$PKG_NAME_DIR\">" > public/index.html
  artifacts:
    paths:
      - public